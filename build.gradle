buildscript {
  ext.kotlin_version = '1.2.30'
  ext.vertx_version = '3.5.1'
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

subprojects {
  apply plugin: 'eclipse'
  apply plugin: 'kotlin'
  apply plugin: 'jacoco'
  eclipse.project.name = rootProject.name + '-' + project.name
  // TODO set up detekt

  repositories {
    mavenCentral()
    jcenter()
  }

  sourceCompatibility = '1.8'

  kotlin {
    experimental {
      coroutines "enable"
    }
  }

  dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "io.vertx:vertx-core:$vertx_version"
    compile "io.vertx:vertx-web:$vertx_version"
//    testCompile "io.vertx:vertx-unit:$vertx_version"
    compile "io.vertx:vertx-lang-kotlin-coroutines:$vertx_version"
    testCompile 'junit:junit:4.12'
    testCompile 'net.wuerl.kotlin:assertj-core-kotlin:0.2.1'
  }

  task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
  }

  jacoco {
    toolVersion = '0.7.9'
//  reportsDir = file("$buildDir/customJacocoReportDir")
  }

  jacocoTestReport {
    reports {
      xml.enabled true
//    html.enabled false
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
      jvmTarget = "1.8"
    }
  }

  configurations {
    all*.exclude group: 'xerces', module: 'xerces'
    all*.exclude group: 'xerces', module: 'xercesImpl'
  }

}

task('setVersionFromBuild') << {
  def buildNumber = System.getenv('BUILD_NUMBER')
  if (buildNumber) {
    def newVersion = version.replace('-SNAPSHOT', ".$buildNumber")
    logger.quiet "Setting version to $newVersion"
    ant.propertyfile(file: 'gradle.properties', comment: 'Edited by setVersionFromBuild') {
      entry(key: 'version', value: newVersion)
    }
  } else {
    logger.warn 'No BUILD_NUMBER. Skipping.'
  }
}
